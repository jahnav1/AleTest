<Activity mc:Ignorable="sap sap2010" x:Class="SP_CreateFolders" this:SP_CreateFolders.in_Str_Folders="2023 Quarterlies/Monthly Management Template/202307/Files Not Yet Processed" this:SP_CreateFolders.in_Str_RelativePath="Development/P072" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mg="clr-namespace:Microsoft.Graph;assembly=Microsoft.Graph" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:ss="clr-namespace:System.Security;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uma="clr-namespace:UiPath.MicrosoftOffice365.Activities;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:umaf="clr-namespace:UiPath.MicrosoftOffice365.Activities.Files;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="All folders to be created separated by '/' (Eg: Folder1/Folder2/Folder3)Do not preceed or succeed by a '/'" Name="in_Str_Folders" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property sap2010:Annotation.AnnotationText="Relative Path to the base folder Location(Should start after drive name and to be continued till base folder)" Name="in_Str_RelativePath" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property sap2010:Annotation.AnnotationText="SP Tenant ID" Name="in_Str_TenantID" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property sap2010:Annotation.AnnotationText="SP Application ID" Name="in_Str_ApplicationID" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property sap2010:Annotation.AnnotationText="SP Base URL where file is present" Name="in_Str_SPURL" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property sap2010:Annotation.AnnotationText="SP Drivename to be searched" Name="in_Str_SPDriveName" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property sap2010:Annotation.AnnotationText="Number of retries for SP Activities(Default is 2)" Name="in_Int_RetryCount" Type="InArgument(x:Int32)" />
    <x:Property sap2010:Annotation.AnnotationText="Number of milliseconds to wait before retry(Default is 1000)" Name="in_Int_RetryDelay" Type="InArgument(x:Int32)" />
  </x:Members>
  <this:SP_CreateFolders.in_Str_TenantID>
    <InArgument x:TypeArguments="x:String">
      <Literal x:TypeArguments="x:String" Value="" />
    </InArgument>
  </this:SP_CreateFolders.in_Str_TenantID>
  <this:SP_CreateFolders.in_Str_ApplicationID>
    <InArgument x:TypeArguments="x:String">
      <Literal x:TypeArguments="x:String" Value="" />
    </InArgument>
  </this:SP_CreateFolders.in_Str_ApplicationID>
  <this:SP_CreateFolders.in_Str_SPURL>
    <InArgument x:TypeArguments="x:String">
      <Literal x:TypeArguments="x:String" Value="" />
    </InArgument>
  </this:SP_CreateFolders.in_Str_SPURL>
  <this:SP_CreateFolders.in_Str_SPDriveName>
    <InArgument x:TypeArguments="x:String">
      <Literal x:TypeArguments="x:String" Value="" />
    </InArgument>
  </this:SP_CreateFolders.in_Str_SPDriveName>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>854,3335.3333333333335</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>SP_CreateFolders_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="39">
      <x:String>Microsoft.Graph</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Text.Json</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Files</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Files.Contracts</x:String>
      <x:String>UiPath.MicrosoftOffice365.Enums</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities.ConnectionService.Contracts</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="76">
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.Graph</AssemblyReference>
      <AssemblyReference>Microsoft.Graph.Core</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Net.HttpListener</AssemblyReference>
      <AssemblyReference>System.Net.NameResolution</AssemblyReference>
      <AssemblyReference>System.Net.Primitives</AssemblyReference>
      <AssemblyReference>System.Net.Requests</AssemblyReference>
      <AssemblyReference>System.Net.ServicePoint</AssemblyReference>
      <AssemblyReference>System.Net.WebClient</AssemblyReference>
      <AssemblyReference>System.Net.WebHeaderCollection</AssemblyReference>
      <AssemblyReference>System.Net.WebProxy</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Text.Json</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldCollapseAll">False</x:Boolean>
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence sap2010:Annotation.AnnotationText="Checks for Existance of the folder and create if not existing&#xA;Folder&#xA;&#xA;Input Arguments:&#xA;in_Str_TenantID - SP Tenant ID&#xA;in_Str_ApplicationID - SP Application ID&#xA;in_Str_SPURL - SP URL&#xA;in_Str_SPDriveName -DriveName/Document Library inside SP where the required files are present&#xA;in_Str_Folders -  All folders to be created separated by '/' (Eg: Folder1/Folder2/Folder3)Do not preceed or succeed by a '/'&#xA;in_Str_RelativePath - Relative Path to the base folder Location(Should start after drive name and to be continued till base folder)&#xA;in_Int_RetryCount - Number of retries for SP Activities(Default is 2)&#xA;in_Int_RetryDelay - Number of milliseconds to wait before retry(Default is 1000)&#xA;Note:-In previous activity (SP_CreateFolder) logic was based on indexing and that logic were getting fail in some scenerios i.e Sept 2023/20 in this case instead ,creating new folder for 20 it was taking index of 20 in Sept 2023 and then throwing exception because of wrong index.&#xA;&#xA;Library Dependency : UiPath.MicrosoftOffice365.Activities - 1.14.1" DisplayName="SP_CreateFolders" sap:VirtualizedContainerService.HintSize="820.6666666666666,6554.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="str_FolderName" />
      <Variable x:TypeArguments="mg:DriveItem" Name="di_Folder" />
      <Variable x:TypeArguments="mg:DriveItem[]" Name="diArr_Folder" />
      <Variable x:TypeArguments="mg:DriveItem" Name="di_PreviousFolder" />
      <Variable x:TypeArguments="x:String" Default="[String.Empty]" Name="str_RelativePath" />
      <Variable x:TypeArguments="s:String[]" Name="arr_Folders" />
      <Variable x:TypeArguments="ss:SecureString" Name="str_Sec_TenantID" />
      <Variable x:TypeArguments="ss:SecureString" Name="str_Sec_AppID" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="758.6666666666666,814" sap2010:WorkflowViewState.IdRef="CommentOut_4">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="484.6666666666667,734" sap2010:WorkflowViewState.IdRef="Sequence_161">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="Graph_Tenant" CacheStrategy="None" DisplayName="Get Credential Tenant ID" FolderPath="AutomationCoE" sap:VirtualizedContainerService.HintSize="422.6666666666667,144.66666666666666" sap2010:WorkflowViewState.IdRef="GetRobotCredential_1" Password="[str_Sec_TenantID]" Username="[in_Str_TenantID]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:GetRobotCredential>
          <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="Graph_ApplicationID" CacheStrategy="None" DisplayName="Get Credential ApplciationId" FolderPath="AutomationCoE" sap:VirtualizedContainerService.HintSize="422.6666666666667,144.66666666666666" sap2010:WorkflowViewState.IdRef="GetRobotCredential_2" Password="[str_Sec_AppID]" Username="[in_Str_ApplicationID]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:GetRobotCredential>
          <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="422.6666666666667,254" sap2010:WorkflowViewState.IdRef="MultipleAssign_6">
            <ui:MultipleAssign.AssignOperations>
              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_22">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[in_Str_Folders]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">P053_RRSP Remittance/Manulife/Salaried/170 Bloor West Investments Inc/Sept 2023/23/DayForceReports</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_23">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[in_Str_RelativePath]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">Payroll Remittances/RPA/Dev</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_24">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[in_Str_SPURL]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">https://omers.sharepoint.com/sites/OM-HROperations</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_25">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[in_Str_SPDriveName]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">Oxford</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_26">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[in_Str_TenantID]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[New System.Net.NetworkCredential("",str_Sec_TenantID).Password]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_27">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[in_Str_ApplicationID]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[New System.Net.NetworkCredential("",str_Sec_AppID).Password]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
              </scg:List>
            </ui:MultipleAssign.AssignOperations>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:MultipleAssign>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
    <ui:LogMessage DisplayName="Start_Log Message" sap:VirtualizedContainerService.HintSize="758.6666666666666,144.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_27" Level="Info" Message="[&quot;SP_CreateFolders - Activity Started&quot;]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
    <If Condition="[IsNothing(in_Int_RetryCount) Or in_Int_RetryCount.Equals(0)]" DisplayName="Retry is NothingOrZero_If" sap:VirtualizedContainerService.HintSize="758.6666666666666,269.3333333333333" sap2010:WorkflowViewState.IdRef="If_83">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Assign DisplayName="DefaultRetry_Assign" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_20">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Int32">[in_Int_RetryCount]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Int32">2</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
      <If.Else>
        <Sequence DisplayName="" sap2010:WorkflowViewState.IdRef="Sequence_162" />
      </If.Else>
    </If>
    <If Condition="[IsNothing(in_Int_RetryDelay) Or in_Int_RetryDelay.Equals(0)]" DisplayName="Delay is NothingOrZero_If" sap:VirtualizedContainerService.HintSize="758.6666666666666,269.3333333333333" sap2010:WorkflowViewState.IdRef="If_84">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Assign DisplayName="DefaultDelay_Assign" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_21">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Int32">[in_Int_RetryDelay]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Int32">1000</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
      <If.Else>
        <Sequence DisplayName="" sap2010:WorkflowViewState.IdRef="Sequence_160" />
      </If.Else>
    </If>
    <ui:RetryScope DisplayName="ForallSP_Retry Scope" sap:VirtualizedContainerService.HintSize="758.6666666666666,4323.333333333333" sap2010:WorkflowViewState.IdRef="RetryScope_3" NumberOfRetries="[in_Int_RetryCount]" RetryInterval="[TimeSpan.FromMilliseconds(in_Int_RetryDelay)]">
      <ui:RetryScope.ActivityBody>
        <ActivityAction>
          <uma:Office365ApplicationScope ApplicationSecret="{x:Null}" CertificateAsBase64="{x:Null}" CertificatePassword="{x:Null}" ContinueOnError="{x:Null}" Password="{x:Null}" SecureApplicationSecret="{x:Null}" SecurePassword="{x:Null}" Timeout="{x:Null}" Username="{x:Null}" ApplicationId="[in_Str_ApplicationID]" AuthenticationType="IntegratedWindowsAuthentication" DisplayName="Microsoft Office 365 Scope - Create Folders in SP" Environment="Global" sap:VirtualizedContainerService.HintSize="716.6666666666666,4144.666666666667" sap2010:WorkflowViewState.IdRef="Office365ApplicationScope_4" OAuthApplication="UiPath" Services="Files" Tenant="[in_Str_TenantID]">
            <uma:Office365ApplicationScope.Body>
              <ActivityAction x:TypeArguments="mg:GraphServiceClient">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="mg:GraphServiceClient" Name="ParentScope" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Do - Create Folders if Missing" sap:VirtualizedContainerService.HintSize="682.6666666666666,4059.3333333333335" sap2010:WorkflowViewState.IdRef="Sequence_144">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Int32" Name="int_Counter" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap2010:Annotation.AnnotationText="split the folders by &quot;/&quot; and iterate each folder if it is exists then check the next folder in array else create." DisplayName="Assign_arr_Folders" sap:VirtualizedContainerService.HintSize="640.6666666666666,130.66666666666666" sap2010:WorkflowViewState.IdRef="Assign_30">
                    <Assign.To>
                      <OutArgument x:TypeArguments="s:String[]">[arr_Folders]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="s:String[]">[in_Str_Folders.Split("/"c).ToArray()]</InArgument>
                    </Assign.Value>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Assign>
                  <ui:ForEach x:TypeArguments="x:String" CurrentIndex="[int_Counter]" DisplayName="For Each_folders" sap:VirtualizedContainerService.HintSize="640.6666666666666,3801.3333333333335" sap2010:WorkflowViewState.IdRef="ForEach`1_41" Values="[arr_Folders]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="x:String">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:String" Name="FolderName" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="606.6666666666666,3611.3333333333335" sap2010:WorkflowViewState.IdRef="Sequence_154">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="mg:DriveItem[]" Name="Arr_DI_FolderName" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:MultipleAssign DisplayName="Initialize_Multiple Assign" sap:VirtualizedContainerService.HintSize="564.6666666666666,162" sap2010:WorkflowViewState.IdRef="MultipleAssign_5">
                            <ui:MultipleAssign.AssignOperations>
                              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_18">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="mg:DriveItem">[di_Folder]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="mg:DriveItem">[Nothing]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_20">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="mg:DriveItem[]">[diArr_Folder]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="mg:DriveItem[]">[Nothing]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_21">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">[str_RelativePath]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String">[if(int_Counter=0, in_Str_RelativePath,str_RelativePath+"/"+arr_Folders(int_Counter-1))]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                              </scg:List>
                            </ui:MultipleAssign.AssignOperations>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:MultipleAssign>
                          <Assign DisplayName="FolderName_Assign" sap:VirtualizedContainerService.HintSize="564.6666666666666,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_31">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[str_FolderName]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[FolderName]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <umaf:FindFilesAndFolders DriveMetadata="{x:Null}" DisplayName="FolderPresent_Find Files And Folders" DriveName="[in_Str_SPDriveName]" First="[di_Folder]" sap:VirtualizedContainerService.HintSize="564.6666666666666,39.333333333333336" sap2010:WorkflowViewState.IdRef="FindFilesAndFolders_71" Query="[str_FolderName]" Results="[diArr_Folder]" SiteUrl="[in_Str_SPURL]" Subfolder="[str_RelativePath]">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </umaf:FindFilesAndFolders>
                          <Assign sap2010:Annotation.AnnotationText="Filter the folder and get only the required item by matching with exact file name" DisplayName="Arr_DI_FolderName - Assign" sap:VirtualizedContainerService.HintSize="564.6666666666666,130.66666666666666" sap2010:WorkflowViewState.IdRef="Assign_35">
                            <Assign.To>
                              <OutArgument x:TypeArguments="mg:DriveItem[]">[Arr_DI_FolderName]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="mg:DriveItem[]">[diArr_Folder.where(Function(fz) fz.Name.Equals(str_FolderName)).ToArray()]</InArgument>
                            </Assign.Value>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Assign>
                          <If Condition="[Arr_DI_FolderName.Count=0]" DisplayName="If Folder not found, create it" sap:VirtualizedContainerService.HintSize="564.6666666666666,2946.6666666666665" sap2010:WorkflowViewState.IdRef="If_105">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence DisplayName="Sequence_create a folder" sap:VirtualizedContainerService.HintSize="530.6666666666666,2360" sap2010:WorkflowViewState.IdRef="Sequence_147">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="488.6666666666667,144.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_100" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Folder not found for &quot;+str_FolderName.ToString]">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:LogMessage>
                                <ui:CommentOut DisplayName="Comment Out(old code) not required" sap:VirtualizedContainerService.HintSize="488.6666666666667,54" sap2010:WorkflowViewState.IdRef="CommentOut_2">
                                  <ui:CommentOut.Body>
                                    <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,150" sap2010:WorkflowViewState.IdRef="Sequence_155">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <umaf:FindFilesAndFolders DriveMetadata="{x:Null}" Results="{x:Null}" DisplayName="PreviousFolder_Find Files And Folders" DriveName="[in_Str_SPDriveName]" First="[di_PreviousFolder]" sap:VirtualizedContainerService.HintSize="388,39.333333333333336" sap2010:WorkflowViewState.IdRef="FindFilesAndFolders_72" Query="[If(int_Counter&gt;0,in_Str_Folders.Split(&quot;/&quot;c)(int_Counter - 1),If(in_Str_RelativePath.LastIndexOf(&quot;/&quot;)&gt;0,in_Str_RelativePath.Substring(in_Str_RelativePath.LastIndexOf(&quot;/&quot;) + 1),in_Str_RelativePath))]" SiteUrl="[in_Str_SPURL]" Subfolder="[If(int_Counter=0,If(in_Str_RelativePath.LastIndexOf(&quot;/&quot;)&gt;0,in_Str_RelativePath.Substring(0,in_Str_RelativePath.LastIndexOf(&quot;/&quot;)),&quot;&quot;),If(int_Counter&gt;1,in_Str_RelativePath + &quot;/&quot; + in_Str_Folders.SubString(0,in_Str_Folders.IndexOf(in_Str_Folders.Split(&quot;/&quot;c)(int_Counter - 1),int_PrevCounter)-1),in_Str_RelativePath))]">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </umaf:FindFilesAndFolders>
                                    </Sequence>
                                  </ui:CommentOut.Body>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:CommentOut>
                                <If Condition="[int_Counter=0]" DisplayName="If_firstfolderin Array" sap:VirtualizedContainerService.HintSize="488.6666666666667,234" sap2010:WorkflowViewState.IdRef="If_106">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If.Then>
                                    <umaf:FindFilesAndFolders DriveMetadata="{x:Null}" Results="{x:Null}" DisplayName="PreviousFolder_Find Files And Folders" DriveName="[in_Str_SPDriveName]" First="[di_PreviousFolder]" sap:VirtualizedContainerService.HintSize="334,39.333333333333336" sap2010:WorkflowViewState.IdRef="FindFilesAndFolders_76" Query="[If(in_Str_RelativePath.LastIndexOf(&quot;/&quot;)&gt;0,in_Str_RelativePath.Substring(in_Str_RelativePath.LastIndexOf(&quot;/&quot;) + 1),in_Str_RelativePath&#x9;)]" SiteUrl="[in_Str_SPURL]" Subfolder="[If(in_Str_RelativePath.LastIndexOf(&quot;/&quot;)&gt;0,in_Str_RelativePath.Substring(0,in_Str_RelativePath.LastIndexOf(&quot;/&quot;)),&quot;&quot;)]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </umaf:FindFilesAndFolders>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_158">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </Sequence>
                                  </If.Else>
                                </If>
                                <TryCatch DisplayName="Try Catch Create Folder" sap:VirtualizedContainerService.HintSize="488.6666666666667,1720" sap2010:WorkflowViewState.IdRef="TryCatch_28">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <TryCatch.Try>
                                    <Sequence sap:VirtualizedContainerService.HintSize="450,334.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_145">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <umaf:CreateFolder DriveMetadata="{x:Null}" DisplayName="Create Folder" Folder="[di_PreviousFolder]" sap:VirtualizedContainerService.HintSize="388,39.333333333333336" sap2010:WorkflowViewState.IdRef="CreateFolder_34" Name="[str_FolderName]" ParentItem="[di_PreviousFolder]">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </umaf:CreateFolder>
                                      <ui:LogMessage DisplayName="Log Message Folder created" sap:VirtualizedContainerService.HintSize="388,144.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_101" Level="Trace" Message="[&quot;Folder created for  &quot;+str_FolderName.ToString]">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:LogMessage>
                                    </Sequence>
                                  </TryCatch.Try>
                                  <TryCatch.Catches>
                                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="454.6666666666667,1064" sap2010:WorkflowViewState.IdRef="Catch`1_28">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ActivityAction x:TypeArguments="s:Exception">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                        </ActivityAction.Argument>
                                        <If Condition="[exception.Message.Contains(&quot;The specified item name already exists&quot;)]" DisplayName="If Folder Exists Exception" sap:VirtualizedContainerService.HintSize="444,993.3333333333334" sap2010:WorkflowViewState.IdRef="If_100">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If.Then>
                                            <Sequence DisplayName="Sequence_Folder Already exist exception" sap:VirtualizedContainerService.HintSize="410,759.3333333333334" sap2010:WorkflowViewState.IdRef="Sequence_146">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="368,144.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_102" Level="Info" Message="[str_FolderName+&quot; Folder already created by a different bot, waiting for a moment&quot;]">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ui:LogMessage>
                                              <Delay DisplayName="Delay Small" Duration="[TimeSpan.FromMilliseconds(1000)]" sap:VirtualizedContainerService.HintSize="368,92" sap2010:WorkflowViewState.IdRef="Delay_28" />
                                              <umaf:FindFilesAndFolders DriveMetadata="{x:Null}" DisplayName="Required_Find Files And Folders" DriveName="[in_Str_SPDriveName]" First="[di_Folder]" sap:VirtualizedContainerService.HintSize="368,39.333333333333336" sap2010:WorkflowViewState.IdRef="FindFilesAndFolders_73" Query="[str_FolderName]" Results="[diArr_Folder]" SiteUrl="[in_Str_SPURL]" Subfolder="[in_Str_RelativePath + If(int_Counter&gt;0,&quot;/&quot; + in_Str_Folders.Substring(0,in_Str_Folders.IndexOf(in_Str_Folders.Split(&quot;/&quot;c)(int_Counter - 1))-1),&quot;&quot;)]">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </umaf:FindFilesAndFolders>
                                              <If Condition="[IsNothing(di_Folder)]" DisplayName="If Folder missing" sap:VirtualizedContainerService.HintSize="368,276" sap2010:WorkflowViewState.IdRef="If_99">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <If.Then>
                                                  <Throw DisplayName="Throw - Unable to Create folder" Exception="[New System.Exception(&quot;S109: Folder Could not be create.FolderName: &lt;FolderName&gt;&quot;.Replace(&quot;&lt;FolderName&gt;&quot;,str_FolderName))]" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="Throw_28" />
                                                </If.Then>
                                                <If.Else>
                                                  <Sequence DisplayName="" sap2010:WorkflowViewState.IdRef="Sequence_163" />
                                                </If.Else>
                                              </If>
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <Rethrow DisplayName="Rethrow Folder not created Exception" sap:VirtualizedContainerService.HintSize="334,25.333333333333332" sap2010:WorkflowViewState.IdRef="Rethrow_28" />
                                          </If.Else>
                                        </If>
                                      </ActivityAction>
                                    </Catch>
                                  </TryCatch.Catches>
                                </TryCatch>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence DisplayName="Sequence Folder Found" sap:VirtualizedContainerService.HintSize="476,402.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_153">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,144.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_103" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Folder found for &quot;+str_FolderName.ToString]">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:LogMessage>
                                <Assign sap2010:Annotation.AnnotationText="assign this folder to previous one , so in case next folder is not exist then it will be required to create new folder." DisplayName="Assign_previous folder" sap:VirtualizedContainerService.HintSize="434,130.66666666666666" sap2010:WorkflowViewState.IdRef="Assign_34">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="mg:DriveItem">[di_PreviousFolder]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="mg:DriveItem">[di_Folder]</InArgument>
                                  </Assign.Value>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </Assign>
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ForEach>
                </Sequence>
              </ActivityAction>
            </uma:Office365ApplicationScope.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </uma:Office365ApplicationScope>
        </ActivityAction>
      </ui:RetryScope.ActivityBody>
      <ui:RetryScope.Condition>
        <ActivityFunc x:TypeArguments="x:Boolean" />
      </ui:RetryScope.Condition>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:RetryScope>
    <ui:LogMessage DisplayName="Start_Log Message" sap:VirtualizedContainerService.HintSize="628,144.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_28" Level="Info" Message="[&quot;SP_CreateFolders - Activity Ended&quot;]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
  </Sequence>
</Activity>