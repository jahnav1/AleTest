<Activity mc:Ignorable="sap sap2010" x:Class="SP_UploadFile" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mg="clr-namespace:Microsoft.Graph;assembly=Microsoft.Graph" xmlns:mg1="clr-namespace:Microsoft.Graph;assembly=Microsoft.Graph.Core" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uma="clr-namespace:UiPath.MicrosoftOffice365.Activities;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:umaf="clr-namespace:UiPath.MicrosoftOffice365.Activities.Files;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:umm="clr-namespace:UiPath.MicrosoftOffice365.Models;assembly=UiPath.MicrosoftOffice365" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Relative Folder path in SP where the file is to be uploaded(Relative path start from the folder below the Drivename and till the folder Name)(Eg:Folder1/Folder2/FinalFolder)" Name="in_Str_FolderToUpload" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property sap2010:Annotation.AnnotationText="The complete file location of the file to be uploaded. The uploaded file name would be same as this file" Name="in_Str_FileToUpload" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property sap2010:Annotation.AnnotationText="URL of the uploaded file" Name="out_Str_OutputFileURL" Type="OutArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="SP Tenant ID" Name="in_Str_TenantID" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property sap2010:Annotation.AnnotationText="SP Application ID" Name="in_Str_ApplicationID" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property sap2010:Annotation.AnnotationText="SP Base URL where file is present" Name="in_Str_SPURL" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property sap2010:Annotation.AnnotationText="SP Drivename to be searched" Name="in_Str_SPDriveName" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property sap2010:Annotation.AnnotationText="Number of retries for SP Activities(Default is 2)" Name="in_Int_RetryCount" Type="InArgument(x:Int32)" />
    <x:Property sap2010:Annotation.AnnotationText="Number of milliseconds to wait before retry(Default is 1000)" Name="in_Int_RetryDelay" Type="InArgument(x:Int32)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>740.6666666666666,3576.6666666666665</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>SP_UploadFile_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="38">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.MicrosoftOffice365.Models</x:String>
      <x:String>Microsoft.Graph</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.MicrosoftOffice365.Enums</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Files.Contracts</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Files</x:String>
      <x:String>UiPath.Shared.Activities.ConnectionService.Contracts</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Net</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365</AssemblyReference>
      <AssemblyReference>Microsoft.Graph</AssemblyReference>
      <AssemblyReference>Microsoft.Graph.Core</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint</AssemblyReference>
      <AssemblyReference>OfficeDevPnP.Core</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Upload the file from  local to SP&#xA;&#xA;InArguments:&#xA;in_Str_TenantID - SP Tenant ID&#xA;in_Str_ApplicationID - SP App ID&#xA;in_Str_SPURL - Sharepoint URL where the file is present&#xA;in_Str_SPDriveName - SP Drive name&#xA;in_Str_FolderToUpload - Relative path to the folder&#xA;in_Str_FileToUpload - File to be uploaded to SP&#xA;in_Int_RetryCount - Number of retries for SP Activities(Default is 2)&#xA;in_Int_RetryDelay - Number of milliseconds to wait before retry(Default is 1000)&#xA;&#xA;outArguments:&#xA;out_Str_OutputFileURL - URL of the uploaded file" DisplayName="SP_UploadFile" sap:VirtualizedContainerService.HintSize="750.6666666666666,3512" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="umm:Office365SharepointList" Name="spLs_BusinessList" />
      <Variable x:TypeArguments="mg:DriveItem" Name="dI_FileDetails" />
      <Variable x:TypeArguments="x:Boolean" Default="False" Name="bool_Downloaded" />
      <Variable x:TypeArguments="mg:DriveItem[]" Name="dI_FilesRetreived" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Start_Log Message" sap:VirtualizedContainerService.HintSize="688.6666666666666,144.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;SP_UploadFile - Activity Started&quot;]" />
    <If Condition="[IsNothing(in_Int_RetryCount) Or in_Int_RetryCount.Equals(0)]" DisplayName="Retry is NothingOrZero_If" sap:VirtualizedContainerService.HintSize="688.6666666666666,269.3333333333333" sap2010:WorkflowViewState.IdRef="If_3">
      <If.Then>
        <Assign DisplayName="DefaultRetry_Assign" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_4">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Int32">[in_Int_RetryCount]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Int32">2</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
      <If.Else>
        <Sequence DisplayName="" sap2010:WorkflowViewState.IdRef="Sequence_8" />
      </If.Else>
    </If>
    <If Condition="[IsNothing(in_Int_RetryDelay) Or in_Int_RetryDelay.Equals(0)]" DisplayName="Delay is NothingOrZero_If" sap:VirtualizedContainerService.HintSize="688.666666666667,246.666666666667" sap2010:WorkflowViewState.IdRef="If_4">
      <If.Then>
        <Assign DisplayName="DefaultDelay_Assign" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_5">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Int32">[in_Int_RetryDelay]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Int32">1000</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
    </If>
    <uma:Office365ApplicationScope ApplicationSecret="{x:Null}" CertificateAsBase64="{x:Null}" CertificatePassword="{x:Null}" ContinueOnError="{x:Null}" Password="{x:Null}" SecureApplicationSecret="{x:Null}" SecurePassword="{x:Null}" Timeout="{x:Null}" Username="{x:Null}" ApplicationId="[in_Str_ApplicationID]" AuthenticationType="IntegratedWindowsAuthentication" DisplayName="DownloadFile_Microsoft Office 365 Scope" Environment="Global" sap:VirtualizedContainerService.HintSize="688.666666666667,2240.66666666667" sap2010:WorkflowViewState.IdRef="Office365ApplicationScope_1" OAuthApplication="UiPath" Services="Files, Shared" Tenant="[in_Str_TenantID]">
      <uma:Office365ApplicationScope.Body>
        <ActivityAction x:TypeArguments="mg:GraphServiceClient">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="mg:GraphServiceClient" Name="ParentScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="654.666666666667,2154.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <TryCatch DisplayName="FolderMissing_Try Catch" sap:VirtualizedContainerService.HintSize="612.666666666667,500.666666666667" sap2010:WorkflowViewState.IdRef="TryCatch_1">
              <TryCatch.Try>
                <ui:RetryScope DisplayName="Folder_Retry Scope" sap:VirtualizedContainerService.HintSize="574,262.666666666667" sap2010:WorkflowViewState.IdRef="RetryScope_3" NumberOfRetries="[in_Int_RetryCount]" RetryInterval="[Timespan.FromMilliseconds(in_Int_RetryDelay)]">
                  <ui:RetryScope.ActivityBody>
                    <ActivityAction>
                      <umaf:FindFilesAndFolders DriveMetadata="{x:Null}" First="{x:Null}" DisplayName="Required_Find Files And Folders" DriveName="[in_Str_SPDriveName]" sap:VirtualizedContainerService.HintSize="532,85.3333333333333" sap2010:WorkflowViewState.IdRef="FindFilesAndFolders_3" Query="[in_Str_FolderToUpload.ToString.Substring(in_Str_FolderToUpload.ToString.LastIndexOf(&quot;/&quot;)+1)]" Results="[dI_FilesRetreived]" SiteUrl="[in_Str_SPURL]" Subfolder="[in_Str_FolderToUpload.ToString.Substring(0,in_Str_FolderToUpload.ToString.LastIndexOf(&quot;/&quot;))]" />
                    </ActivityAction>
                  </ui:RetryScope.ActivityBody>
                  <ui:RetryScope.Condition>
                    <ActivityFunc x:TypeArguments="x:Boolean" />
                  </ui:RetryScope.Condition>
                </ui:RetryScope>
              </TryCatch.Try>
              <TryCatch.Catches>
                <Catch x:TypeArguments="mg1:ServiceException" sap:VirtualizedContainerService.HintSize="578.666666666667,22" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ActivityAction x:TypeArguments="mg1:ServiceException">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="mg1:ServiceException" Name="exception" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="DownloadFolderNotFound_Sequence" sap:VirtualizedContainerService.HintSize="376,248.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_4">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage DisplayName="ExceptionMessage_Log Message" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Error" Message="[&quot;SP_DownloadFile - Folder Missing catch Block . Exception Message: &quot; + exception.Message]" />
                      <Throw DisplayName="FolderNotFound_Throw" Exception="[New BusinessRuleException(&quot;B100: Folder not found. Relative Path: &lt;Folder&gt;&quot;.Replace(&quot;&lt;Folder&gt;&quot;,in_Str_FolderToUpload.ToString.Substring(0,in_Str_FolderToUpload.ToString.LastIndexOf(&quot;/&quot;))))]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_3" />
                    </Sequence>
                  </ActivityAction>
                </Catch>
              </TryCatch.Catches>
            </TryCatch>
            <ui:ForEach x:TypeArguments="mg:DriveItem" CurrentIndex="{x:Null}" DisplayName="CheckEachFolder_For Each" sap:VirtualizedContainerService.HintSize="612.666666666667,1237.33333333333" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[dI_FilesRetreived]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="mg:DriveItem">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="mg:DriveItem" Name="item" />
                  </ActivityAction.Argument>
                  <If Condition="[item.Name.ToLower.Equals(in_Str_FolderToUpload.ToString.Substring(in_Str_FolderToUpload.ToString.LastIndexOf(&quot;/&quot;)+1).ToLower)]" DisplayName="CheckName_If" sap:VirtualizedContainerService.HintSize="484,1109.33333333333" sap2010:WorkflowViewState.IdRef="If_1">
                    <If.Then>
                      <Sequence DisplayName="CheckFileandfolder_Sequence" sap:VirtualizedContainerService.HintSize="418,924.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_5">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:RetryScope DisplayName="Upload_Retry Scope" sap:VirtualizedContainerService.HintSize="376,432" sap2010:WorkflowViewState.IdRef="RetryScope_2" NumberOfRetries="[in_Int_RetryCount]" RetryInterval="[Timespan.FromMilliseconds(in_Int_RetryDelay)]">
                          <ui:RetryScope.ActivityBody>
                            <ActivityAction>
                              <umaf:UploadFile CloudFileName="{x:Null}" DriveMetadata="{x:Null}" Metadata="{x:Null}" ConflictBehavior="Replace" Destination="[item]" DisplayName="Upload File" sap:VirtualizedContainerService.HintSize="334,254.666666666667" sap2010:WorkflowViewState.IdRef="UploadFile_3" LocalFilePath="[in_Str_FileToUpload]" Result="[dI_FileDetails]" />
                            </ActivityAction>
                          </ui:RetryScope.ActivityBody>
                          <ui:RetryScope.Condition>
                            <ActivityFunc x:TypeArguments="x:Boolean" />
                          </ui:RetryScope.Condition>
                        </ui:RetryScope>
                        <Assign DisplayName="URL_Assign" sap:VirtualizedContainerService.HintSize="376,62" sap2010:WorkflowViewState.IdRef="Assign_2">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[out_Str_OutputFileURL]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[dI_FileDetails.WebUrl]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:LogMessage DisplayName="UploadFile_Log Message" sap:VirtualizedContainerService.HintSize="376,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;Uploaded file to SP from Local. SP: &quot; + dI_FilesRetreived(0).WebUrl + &quot; Local: &quot; + in_Str_FileToUpload]" />
                        <Assign DisplayName="Downloaded_Assign" sap:VirtualizedContainerService.HintSize="376,62" sap2010:WorkflowViewState.IdRef="Assign_3">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[bool_Downloaded]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:Break DisplayName="End_Break" sap:VirtualizedContainerService.HintSize="376,22" sap2010:WorkflowViewState.IdRef="Break_1" />
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_6">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Sequence>
                    </If.Else>
                  </If>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
            <If Condition="[Not bool_Downloaded]" DisplayName="Uploadedfile_If" sap:VirtualizedContainerService.HintSize="612.666666666667,244.666666666667" sap2010:WorkflowViewState.IdRef="If_2">
              <If.Then>
                <Throw DisplayName="NoFolderException_Throw" Exception="[New BusinessRuleException(&quot;B100: Folder not found. Relative Path: &lt;Folder&gt;&quot;.Replace(&quot;&lt;Folder&gt;&quot;,in_Str_FolderToUpload))]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_4" />
              </If.Then>
              <If.Else>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_7">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </uma:Office365ApplicationScope.Body>
    </uma:Office365ApplicationScope>
    <ui:LogMessage DisplayName="End_Log Message" sap:VirtualizedContainerService.HintSize="688.666666666667,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;SP_UploadFile - Activity Ended&quot;]" />
  </Sequence>
</Activity>